{"version":3,"sources":["components/Header/index.js","components/GridItem/index.js","components/GridRow/index.js","components/Button/index.js","components/Footer/index.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","className","React","Component","GridItem","props","onClick","handleClick","rowIndex","colIndex","this","col","GridRow","row","map","Button","type","id","handleReset","Footer","messege","turn","App","checkForGameResult","i","state","winningConditions","length","first","gameState","Number","slice","second","third","setState","gameStatus","currentPlayer","counter","copiedGameState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdbe71d2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        return(\r\n            <div key=\"titleBox\" className=\"header\">Tic-Tac-Toe Game</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './index.css';\r\n\r\nclass GridItem extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <div key=\"gridItemBox\" className=\"grid-item\" onClick={() => {\r\n                this.props.handleClick(this.props.rowIndex,this.props.colIndex)\r\n                }}>\r\n                {this.props.col}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GridItem;","import React from 'react';\r\nimport './index.css';\r\nimport GridItem from '../GridItem';\r\n\r\nclass GridRow extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <div key=\"gridRowBox\" className=\"grid-row\">\r\n                {this.props.row.map((col,colIndex) => {\r\n                    return <GridItem key={colIndex}\r\n                    rowIndex={this.props.rowIndex} \r\n                    col={col} colIndex={colIndex} \r\n                    handleClick={this.props.handleClick}/>;\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GridRow;","import React from 'react';\r\nimport './index.css';\r\n\r\nclass Button extends React.Component{\r\n    render(){\r\n        return(\r\n            <button key=\"btn\" type=\"button\" id=\"mybtn\" onClick={this.props.handleReset}>Play Again</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './index.css';\r\n\r\nclass Footer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <div  key=\"messegeBox\" id=\"messege\">{this.props.messege}</div>\r\n                <div key=\"playerBox\" className=\"footer\">Player {this.props.turn}'s turn</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Header from '../Header';\nimport  GridRow from '../GridRow';\nimport Button from '../Button';\nimport Footer from '../Footer';\n\nclass App extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            currentPlayer:\"X\",\n            gameState: [[\"\", \"\", \"\"],[\"\", \"\", \"\"],[\"\", \"\", \"\"]],\n            gameStatus: true,\n            winningConditions: [[\"00\",\"01\",\"02\"],[\"10\",\"11\",\"12\"],[\"20\",\"21\",\"22\"],[\"00\",\"10\",\"20\"],[\"01\",\"11\",\"21\"],[\"02\",\"12\",\"22\"],[\"00\",\"11\",\"22\"],[\"02\",\"11\",\"20\"]],\n            messege: \"\",\n            counter: 0\n        };\n    }\n\n    checkForGameResult = () => {\n        for(let i=0;i<this.state.winningConditions.length;i++)\n        {\n            let first = this.state.gameState[Number(this.state.winningConditions[i][0].slice(0,1))][Number(this.state.winningConditions[i][0].slice(1,2))];\n            let second = this.state.gameState[Number(this.state.winningConditions[i][1].slice(0,1))][Number(this.state.winningConditions[i][1].slice(1,2))];\n            let third = this.state.gameState[Number(this.state.winningConditions[i][2].slice(0,1))][Number(this.state.winningConditions[i][2].slice(1,2))];\n            if(first===second && second===third && first!==\"\" && second!==\"\" && third!==\"\")\n            {\n                this.setState({\n                    gameStatus: false,\n                    messege: `Congratulations! Player ${this.state.currentPlayer} Wins`\n                });\n                break;\n            }\n        }\n        if(this.state.counter===8)\n        {\n            this.setState({\n                messege: \"Match Draw!\"\n            });\n        }\n    }\n\n    handleClick = (rowIndex,colIndex) => {\n        if(this.state.gameState[rowIndex][colIndex]===\"\" && this.state.gameStatus)\n        {\n            let copiedGameState = [...this.state.gameState];\n            copiedGameState[rowIndex][colIndex] = this.state.currentPlayer;\n            this.setState({\n                gameState : copiedGameState,\n                currentPlayer: (this.state.currentPlayer===\"X\") ? \"0\":\"X\",\n                counter: this.state.counter + 1\n            });\n            this.checkForGameResult();\n        }\n    }\n\n    handleReset = () =>{\n        this.setState({\n            currentPlayer: \"X\",\n            gameState: [[\"\", \"\", \"\"],[\"\", \"\", \"\"],[\"\", \"\", \"\"]],\n            gameStatus: true,\n            messege: \"\",\n            counter: 0\n        });\n    }\n\n    render(){\n        return(\n            <div key=\"gameArea\" id=\"container\">\n                <Header key=\"headerBox\"/>\n                <div key=\"gridBox\" id=\"board\">\n                    {this.state.gameState.map((row,rowIndex) => {\n                        return <GridRow key={rowIndex} row={row} rowIndex={rowIndex} handleClick={this.handleClick}/>;\n                        })}\n                </div>\n                <Footer key=\"footerBox\" turn={this.state.currentPlayer} messege={this.state.messege}/>\n                <Button key=\"btnComponent\" handleReset={this.handleReset}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}